#!/bin/bash
start=`date +%s`
builds=0
go get github.com/cavaliercoder/grab@v2.0.0
VERBASE=`date "+%Y%m%d%H%M"`
REPOHASH=`cat .git/HEAD | awk '{print $2}'`
COMMIT=`cat .git/$REPOHASH`
echo "Building commit ${COMMIT} as version ${VERBASE}"
mkdir -p out/${COMMIT: -5}

sed -i -e "s/{{COMMITHASH}}/${COMMIT}/" main.go

GOOS="windows"
GOARCH="amd64"
env GOOS=${GOOS} GOARCH=${GOARCH} > /dev/null 2>&1
VER="${VERBASE}-${GOOS}-${GOARCH}"
sed -i -e "s/{{BUILDNAME}}/${VER}/" main.go
OUTPUT="out/${COMMIT: -5}/$GOARCH/$GOOS"
go build -o $OUTPUT.exe
((builds=builds+1))
echo "Built ${VERBASE} for ${GOOS} on ${GOARCH}! - ${OUTPUT}"

GOOS="linux"
GOARCH="amd64"
env GOOS=${GOOS} GOARCH=${GOARCH} > /dev/null 2>&1
OLDVER="${VER}"
VER="${VERBASE}-${GOOS}-${GOARCH}"
sed -i -e "s/${OLDVER}/${VER}/" main.go
OUTPUT="out/${COMMIT: -5}/$GOARCH/$GOOS"
go build -o $OUTPUT
((builds=builds+1))
echo "Built ${VERBASE} for ${GOOS} on ${GOARCH}! - ${OUTPUT}"

GOOS="freebsd"
GOARCH="amd64"
env GOOS=${GOOS} GOARCH=${GOARCH} > /dev/null 2>&1
OLDVER="${VER}"
VER="${VERBASE}-${GOOS}-${GOARCH}"
sed -i -e "s/${OLDVER}/${VER}/" main.go
OUTPUT="out/${COMMIT: -5}/$GOARCH/$GOOS"
go build -o $OUTPUT
((builds=builds+1))
echo "Built ${VERBASE} for ${GOOS} on ${GOARCH}! - ${OUTPUT}"

GOOS="darwin"
GOARCH="amd64"
env GOOS=${GOOS} GOARCH=${GOARCH} > /dev/null 2>&1
OLDVER="${VER}"
VER="${VERBASE}-${GOOS}-${GOARCH}"
sed -i -e "s/${OLDVER}/${VER}/" main.go
OUTPUT="out/${COMMIT: -5}/$GOARCH/$GOOS"
go build -o $OUTPUT
((builds=builds+1))
echo "Built ${VERBASE} for ${GOOS} on ${GOARCH}! - ${OUTPUT}"

GOOS="linux"
GOARCH="arm64"
env GOOS=${GOOS} GOARCH=${GOARCH} > /dev/null 2>&1
OLDVER="${VER}"
VER="${VERBASE}-${GOOS}-${GOARCH}"
sed -i -e "s/${OLDVER}/${VER}/" main.go
OUTPUT="out/${COMMIT: -5}/$GOARCH/$GOOS"
go build -o $OUTPUT
((builds=builds+1))
echo "Built ${VERBASE} for ${GOOS} on ${GOARCH}! - ${OUTPUT}"

GOOS="freebsd"
GOARCH="arm64"
env GOOS=${GOOS} GOARCH=${GOARCH} > /dev/null 2>&1
OLDVER="${VER}"
VER="${VERBASE}-${GOOS}-${GOARCH}"
sed -i -e "s/${OLDVER}/${VER}/" main.go
OUTPUT="out/${COMMIT: -5}/$GOARCH/$GOOS"
go build -o $OUTPUT
((builds=builds+1))
echo "Built ${VERBASE} for ${GOOS} on ${GOARCH}! - ${OUTPUT}"

GOOS="darwin"
GOARCH="arm64"
env GOOS=${GOOS} GOARCH=${GOARCH} > /dev/null 2>&1
OLDVER="${VER}"
VER="${VERBASE}-${GOOS}-${GOARCH}"
sed -i -e "s/${OLDVER}/${VER}/" main.go
OUTPUT="out/${COMMIT: -5}/$GOARCH/$GOOS"
go build -o $OUTPUT
((builds=builds+1))
echo "Built ${VERBASE} for ${GOOS} on ${GOARCH}! - ${OUTPUT}"

sed -i -e "s/${VER}/{{BUILDNAME}}/" main.go
sed -i -e "s/${COMMIT}/{{COMMITHASH}}/" main.go
end=`date +%s`
taken=$((end-start))
echo "Built for ${builds} platforms in ${taken} seconds."

if [[ "$#" -gt 0 ]]; then
	if [ $1 == "--sign" ]; then
		signtool sign /tr http://timestamp.digicert.com /td sha256 /fd sha256 /n "CreeperHost LTD" "out/${COMMIT: -5}/amd64/windows.exe"
		signtool sign /as /tr http://timestamp.digicert.com /td sha1 /fd sha1 /n "CreeperHost LTD" "out/${COMMIT: -5}/amd64/windows.exe"
	fi
fi
